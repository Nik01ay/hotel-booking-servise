-- Создание таблицы hotels
CREATE SCHEMA IF NOT EXISTS booking_schema;

DROP TABLE IF EXISTS booking_schema.hotels;

CREATE TABLE IF NOT EXISTS booking_schema.hotels (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    address character varying(255) COLLATE pg_catalog."default",
    announce character varying(255) COLLATE pg_catalog."default",
    city character varying(255) COLLATE pg_catalog."default",
    distance real,
    name character varying(255) COLLATE pg_catalog."default",
    rating real,
    raw_rating real,
    votes integer,
    CONSTRAINT hotels_pkey PRIMARY KEY (id)
);

-- Вставка данных в таблицу hotels
INSERT INTO booking_schema.hotels (address, announce, city, distance, name, rating, raw_rating, votes)
VALUES
('123 Main St, Downtown', 'A cozy hotel in the heart of the city.', 'New York', 0.5, 'City Center Hotel', 4.5, 4.7, 250),
('456 Elm St, Near the Park', 'Enjoy a peaceful stay with beautiful park views.', 'Los Angeles', 1.2, 'Parkside Inn', 4.2, 4.3, 180),
('789 Oak Ave, Beachfront', 'Experience luxury with stunning ocean views.', 'Miami', 0.1, 'Ocean View Resort', 4.8, 4.9, 300);

-- Создание таблицы users
DROP TABLE IF EXISTS booking_schema.users;

CREATE TABLE IF NOT EXISTS booking_schema.users (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    email character varying(255) COLLATE pg_catalog."default",
    name character varying(255) COLLATE pg_catalog."default",
    password character varying(255) COLLATE pg_catalog."default",
    role character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT uk3g1j96g94xpk3lpxl2qbl985x UNIQUE (name),
    CONSTRAINT users_role_check CHECK (role::text = ANY (ARRAY['USER'::character varying, 'ADMIN'::character varying]::text[]))
);

-- Вставка данных в таблицу users
INSERT INTO booking_schema.users (email, name, password, role)
VALUES
('user1@example.com', 'User1', 'password1', 'USER'),
('user2@example.com', 'User2', 'password2', 'USER'),
('admin@example.com', 'Admin', 'adminpassword', 'ADMIN');


DROP TABLE IF EXISTS booking_schema.rooms;

CREATE TABLE IF NOT EXISTS booking_schema.rooms
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    capacity integer,
    description character varying(255) COLLATE pg_catalog."default",
    name character varying(255) COLLATE pg_catalog."default",
    "number" character varying(255) COLLATE pg_catalog."default",
    price integer,
    hotel_id bigint,
    CONSTRAINT rooms_pkey PRIMARY KEY (id),
    CONSTRAINT fkp5lufxy0ghq53ugm93hdc941k FOREIGN KEY (hotel_id)
        REFERENCES booking_schema.hotels (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

INSERT INTO booking_schema.rooms (capacity, description, name, number, price, hotel_id)
VALUES
(2, 'Standard Room', 'Room 101', '101', 100, 1),
(4, 'Suite Room', 'Room 102', '102', 200, 1);

-- Добавление комнат для отеля с идентификатором 2
INSERT INTO booking_schema.rooms (capacity, description, name, number, price, hotel_id)
VALUES
(1, 'Single Room', 'Room 201', '201', 150, 2),
(2, 'Double Room', 'Room 202', '202', 250, 2);

-- Добавление комнат для отеля с идентификатором 3
INSERT INTO booking_schema.rooms (capacity, description, name, number, price, hotel_id)
VALUES
(3, 'Family Room', 'Room 301', '301', 180, 3),
(5, 'Luxury Suite', 'Room 302', '302', 300, 3);

DROP TABLE IF EXISTS booking_schema.bookings;

CREATE TABLE IF NOT EXISTS booking_schema.bookings
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    check_in date,
    check_out date,
    room_id bigint,
    user_id bigint,
    CONSTRAINT bookings_pkey PRIMARY KEY (id),
    CONSTRAINT fkeyog2oic85xg7hsu2je2lx3s6 FOREIGN KEY (user_id)
        REFERENCES booking_schema.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fkrgoycol97o21kpjodw1qox4nc FOREIGN KEY (room_id)
        REFERENCES booking_schema.rooms (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);
INSERT INTO booking_schema.bookings (check_in, check_out, room_id, user_id)
VALUES
('2023-01-01', '2023-01-10', 1, 1);

INSERT INTO booking_schema.bookings (check_in, check_out, room_id, user_id)
VALUES
('2023-01-05', '2023-01-15', 2, 2);